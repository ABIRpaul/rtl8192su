TODO:
	- fw/hw encryption/decryption offload needs to be implemented.
	  currently everything is done with mac80211 software crypto.

	- HT / 802.11n support is not implemented or tested. In fact,
	  this driver might crash if it is to connect to a 11n network.
	  (With this goes 40MHz channel bandwidth)

	- rx statistics (Signal/Quality)
	  rtl8192su provides a wide range of noise and signal levels,
	  but they need to be read, processed and passed to mac80211.

	- WPS PBC handler
	  Some(all?) rtl8192su sticks have a little wps push button.
	  The GPIO needs to be polled periodically (2sec in the vendor
	  driver) and a key event has to be sent to the input layer.

	- ADHOC
	  The firmware supports ADHOC, but the driver doesn't.

	- code cleanup
	  Currently there's a lot of debug/rtl8192se/rtl8192cu cruft.
	  This needs to be removed and some functions needs to be
	  refactored

	- rtl8192s_common
	  rtl8192su and rtl8192se share some functionality. Setup
	  a shared library for common functions

	- set the correct RF configuration
	  (Currently everything is hardcoded to 1:1T1R)

	- deal with surprise remove and rmmod kernel OOPS
	  (Currently the kernel crashes when the device is unplugged at
	  a "bad" (which is basically "always" when it's up) time, or
	  when the rtl8192su module is unloaded... )

TESTS:
	- stability test
	  (How long does a idle/loaded connection last?)

	- performance/throughput test
	  (How fast is it, what's the jitter and package drop?)

	- interop test
	  (Can the driver/device connect to standard APs from different
	  vendors and how does it behave in a noisy environment)

	- firmware test (see firmwares/README.firmware)

	- USB 1.1 test
	  (Does it work with an USB 1.1 HCD? e.g.: ohci/uhci and
	  some weird embedded hcds)

KNOWN LIMITATIONS:
	- No AP/P2P mode (firmware limitation)
	- No accurate tx feedback (fw-host protocol limitation)
	- (More to come)
